name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths-ignore:
        - 'CODEOWNERS'
        - '**.md'
        - 'dev_utils/**'
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to build"
        required: true
        default: "main"

# Allow subsequent pushes to the same PR or REF to cancel any previous jobs.
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  deployments: write
  pull-requests: read
  issues: read

jobs:
  nanovdb-editor-build-and-test:
    if: ${{ github.event_name != 'pull_request' || !github.event.pull_request.draft }}
    name: NanoVDB Editor Build
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Vulkan dependencies
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y mesa-vulkan-drivers vulkan-tools
          sudo apt-get install -y libxcb1-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-xinerama0-dev libx11-xcb-dev libxrandr-dev libwayland-dev wayland-protocols libdirectfb-dev

      - name: Build NanoVDB Editor
        run: |
          set -e
          chmod +x ./build.sh
          ./build.sh -rfv

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nanovdb-editor-build
          path: |
            build/
          retention-days: 2

      - name: Run GTests
        run: |
          set -e
          export LD_LIBRARY_PATH=$PWD/build/Release/lib:$PWD/build/Release/bin:$LD_LIBRARY_PATH
          ctest --test-dir build/Release/gtests -C Release --output-on-failure --verbose
